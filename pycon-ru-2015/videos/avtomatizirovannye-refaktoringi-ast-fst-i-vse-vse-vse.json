{
  "description": "Одна из самых неприятных вещей в работе программиста — рутина. К сожалению, её не избежать — работы по поддержке существующего кода заставляют нас вносить одинаковые изменения в несколько файлов разом. По мере роста проекта эта задача вырастает до десятков правок в сотнях файлов, заставляя даже самого терпеливого программиста задуматься о смысли бытия. Но что делать? Автоматизируйте это! В этом докладе мы расскажем о разных способах работать с исходным кодом из Python, и почему это весело.\nВ докладе:\n- Всякую рутинную работу можно превратить в интересную задачу по автоматизации рутины;\n- В «батарейках» Python можно найти достаточно средств для самостоятельного анализа исходного кода;\n- Топорный подход с «find/replace» часто не подходит из-за необходимости учитывать контекст каждой конкретной правки, равно как и сохранять по возможности оформление исходного файла;\n- Регулярные выражения _не_ подходят для разбора исходного кода на сложных языках программирования;\n- Любая достаточно продвинутая программа неотличима от магии.\n",
  "duration": 2153,
  "recorded": "2015-09-19",
  "speakers": [
    "Kirill Borisov"
  ],
  "thumbnail_url": "https://i.ytimg.com/vi/JBEDAObG5RU/hqdefault.jpg",
  "title": "Автоматизированные рефакторинги: AST, FST и все-все-все",
  "videos": [
    {
      "type": "youtube",
      "url": "https://www.youtube.com/watch?v=JBEDAObG5RU"
    }
  ]
}
